// @ts-nocheck

/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseErrorExportErrorCode } from './ResponseErrorExportErrorCode';
import {
    ResponseErrorExportErrorCodeFromJSON,
    ResponseErrorExportErrorCodeFromJSONTyped,
    ResponseErrorExportErrorCodeToJSON,
} from './ResponseErrorExportErrorCode';
import type { ExportDownloadPayload } from './ExportDownloadPayload';
import {
    ExportDownloadPayloadFromJSON,
    ExportDownloadPayloadFromJSONTyped,
    ExportDownloadPayloadToJSON,
} from './ExportDownloadPayload';

/**
 * 
 * @export
 * @interface ResponseExportDownloadPayloadExportErrorCode
 */
export interface ResponseExportDownloadPayloadExportErrorCode {
    /**
     * 
     * @type {ExportDownloadPayload}
     * @memberof ResponseExportDownloadPayloadExportErrorCode
     */
    data?: ExportDownloadPayload;
    /**
     * 
     * @type {Array<ResponseErrorExportErrorCode>}
     * @memberof ResponseExportDownloadPayloadExportErrorCode
     */
    errors: Array<ResponseErrorExportErrorCode>;
}

/**
 * Check if a given object implements the ResponseExportDownloadPayloadExportErrorCode interface.
 */
export function instanceOfResponseExportDownloadPayloadExportErrorCode(value: object): value is ResponseExportDownloadPayloadExportErrorCode {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function ResponseExportDownloadPayloadExportErrorCodeFromJSON(json: any): ResponseExportDownloadPayloadExportErrorCode {
    return ResponseExportDownloadPayloadExportErrorCodeFromJSONTyped(json, false);
}

export function ResponseExportDownloadPayloadExportErrorCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseExportDownloadPayloadExportErrorCode {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ExportDownloadPayloadFromJSON(json['data']),
        'errors': ((json['errors'] as Array<any>).map(ResponseErrorExportErrorCodeFromJSON)),
    };
}

export function ResponseExportDownloadPayloadExportErrorCodeToJSON(value?: ResponseExportDownloadPayloadExportErrorCode | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data': ExportDownloadPayloadToJSON(value['data']),
        'errors': ((value['errors'] as Array<any>).map(ResponseErrorExportErrorCodeToJSON)),
    };
}

