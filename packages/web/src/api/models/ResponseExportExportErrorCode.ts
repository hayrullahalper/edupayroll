// @ts-nocheck

/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseErrorExportErrorCode } from './ResponseErrorExportErrorCode';
import {
    ResponseErrorExportErrorCodeFromJSON,
    ResponseErrorExportErrorCodeFromJSONTyped,
    ResponseErrorExportErrorCodeToJSON,
} from './ResponseErrorExportErrorCode';
import type { Export } from './Export';
import {
    ExportFromJSON,
    ExportFromJSONTyped,
    ExportToJSON,
} from './Export';

/**
 * 
 * @export
 * @interface ResponseExportExportErrorCode
 */
export interface ResponseExportExportErrorCode {
    /**
     * 
     * @type {Export}
     * @memberof ResponseExportExportErrorCode
     */
    data?: Export;
    /**
     * 
     * @type {Array<ResponseErrorExportErrorCode>}
     * @memberof ResponseExportExportErrorCode
     */
    errors: Array<ResponseErrorExportErrorCode>;
}

/**
 * Check if a given object implements the ResponseExportExportErrorCode interface.
 */
export function instanceOfResponseExportExportErrorCode(value: object): value is ResponseExportExportErrorCode {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function ResponseExportExportErrorCodeFromJSON(json: any): ResponseExportExportErrorCode {
    return ResponseExportExportErrorCodeFromJSONTyped(json, false);
}

export function ResponseExportExportErrorCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseExportExportErrorCode {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ExportFromJSON(json['data']),
        'errors': ((json['errors'] as Array<any>).map(ResponseErrorExportErrorCodeFromJSON)),
    };
}

export function ResponseExportExportErrorCodeToJSON(value?: ResponseExportExportErrorCode | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data': ExportToJSON(value['data']),
        'errors': ((value['errors'] as Array<any>).map(ResponseErrorExportErrorCodeToJSON)),
    };
}

