// @ts-nocheck

/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseErrorRecordErrorCode } from './ResponseErrorRecordErrorCode';
import {
    ResponseErrorRecordErrorCodeFromJSON,
    ResponseErrorRecordErrorCodeFromJSONTyped,
    ResponseErrorRecordErrorCodeToJSON,
} from './ResponseErrorRecordErrorCode';
import type { Record } from './Record';
import {
    RecordFromJSON,
    RecordFromJSONTyped,
    RecordToJSON,
} from './Record';

/**
 * 
 * @export
 * @interface ResponseRecordRecordErrorCode
 */
export interface ResponseRecordRecordErrorCode {
    /**
     * 
     * @type {Record}
     * @memberof ResponseRecordRecordErrorCode
     */
    data?: Record;
    /**
     * 
     * @type {Array<ResponseErrorRecordErrorCode>}
     * @memberof ResponseRecordRecordErrorCode
     */
    errors: Array<ResponseErrorRecordErrorCode>;
}

/**
 * Check if a given object implements the ResponseRecordRecordErrorCode interface.
 */
export function instanceOfResponseRecordRecordErrorCode(value: object): value is ResponseRecordRecordErrorCode {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function ResponseRecordRecordErrorCodeFromJSON(json: any): ResponseRecordRecordErrorCode {
    return ResponseRecordRecordErrorCodeFromJSONTyped(json, false);
}

export function ResponseRecordRecordErrorCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseRecordRecordErrorCode {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : RecordFromJSON(json['data']),
        'errors': ((json['errors'] as Array<any>).map(ResponseErrorRecordErrorCodeFromJSON)),
    };
}

export function ResponseRecordRecordErrorCodeToJSON(value?: ResponseRecordRecordErrorCode | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data': RecordToJSON(value['data']),
        'errors': ((value['errors'] as Array<any>).map(ResponseErrorRecordErrorCodeToJSON)),
    };
}

