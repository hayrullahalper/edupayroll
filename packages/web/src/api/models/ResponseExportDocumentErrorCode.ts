// @ts-nocheck

/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseErrorDocumentErrorCode } from './ResponseErrorDocumentErrorCode';
import {
    ResponseErrorDocumentErrorCodeFromJSON,
    ResponseErrorDocumentErrorCodeFromJSONTyped,
    ResponseErrorDocumentErrorCodeToJSON,
} from './ResponseErrorDocumentErrorCode';
import type { Export } from './Export';
import {
    ExportFromJSON,
    ExportFromJSONTyped,
    ExportToJSON,
} from './Export';

/**
 * 
 * @export
 * @interface ResponseExportDocumentErrorCode
 */
export interface ResponseExportDocumentErrorCode {
    /**
     * 
     * @type {Export}
     * @memberof ResponseExportDocumentErrorCode
     */
    data?: Export;
    /**
     * 
     * @type {Array<ResponseErrorDocumentErrorCode>}
     * @memberof ResponseExportDocumentErrorCode
     */
    errors: Array<ResponseErrorDocumentErrorCode>;
}

/**
 * Check if a given object implements the ResponseExportDocumentErrorCode interface.
 */
export function instanceOfResponseExportDocumentErrorCode(value: object): value is ResponseExportDocumentErrorCode {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function ResponseExportDocumentErrorCodeFromJSON(json: any): ResponseExportDocumentErrorCode {
    return ResponseExportDocumentErrorCodeFromJSONTyped(json, false);
}

export function ResponseExportDocumentErrorCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseExportDocumentErrorCode {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ExportFromJSON(json['data']),
        'errors': ((json['errors'] as Array<any>).map(ResponseErrorDocumentErrorCodeFromJSON)),
    };
}

export function ResponseExportDocumentErrorCodeToJSON(value?: ResponseExportDocumentErrorCode | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data': ExportToJSON(value['data']),
        'errors': ((value['errors'] as Array<any>).map(ResponseErrorDocumentErrorCodeToJSON)),
    };
}

