// @ts-nocheck

/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { School } from './School';
import {
    SchoolFromJSON,
    SchoolFromJSONTyped,
    SchoolToJSON,
} from './School';
import type { ResponseErrorSchoolErrorCode } from './ResponseErrorSchoolErrorCode';
import {
    ResponseErrorSchoolErrorCodeFromJSON,
    ResponseErrorSchoolErrorCodeFromJSONTyped,
    ResponseErrorSchoolErrorCodeToJSON,
} from './ResponseErrorSchoolErrorCode';

/**
 * 
 * @export
 * @interface ResponseSchoolSchoolErrorCode
 */
export interface ResponseSchoolSchoolErrorCode {
    /**
     * 
     * @type {School}
     * @memberof ResponseSchoolSchoolErrorCode
     */
    data?: School;
    /**
     * 
     * @type {Array<ResponseErrorSchoolErrorCode>}
     * @memberof ResponseSchoolSchoolErrorCode
     */
    errors: Array<ResponseErrorSchoolErrorCode>;
}

/**
 * Check if a given object implements the ResponseSchoolSchoolErrorCode interface.
 */
export function instanceOfResponseSchoolSchoolErrorCode(value: object): value is ResponseSchoolSchoolErrorCode {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function ResponseSchoolSchoolErrorCodeFromJSON(json: any): ResponseSchoolSchoolErrorCode {
    return ResponseSchoolSchoolErrorCodeFromJSONTyped(json, false);
}

export function ResponseSchoolSchoolErrorCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseSchoolSchoolErrorCode {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : SchoolFromJSON(json['data']),
        'errors': ((json['errors'] as Array<any>).map(ResponseErrorSchoolErrorCodeFromJSON)),
    };
}

export function ResponseSchoolSchoolErrorCodeToJSON(value?: ResponseSchoolSchoolErrorCode | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'data': SchoolToJSON(value['data']),
        'errors': ((value['errors'] as Array<any>).map(ResponseErrorSchoolErrorCodeToJSON)),
    };
}

