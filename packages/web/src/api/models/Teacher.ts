// @ts-nocheck

/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Teacher
 */
export interface Teacher {
    /**
     * 
     * @type {string}
     * @memberof Teacher
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Teacher
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Teacher
     */
    branch: string;
    /**
     * 
     * @type {string}
     * @memberof Teacher
     */
    idNumber: string;
    /**
     * 
     * @type {string}
     * @memberof Teacher
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof Teacher
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Teacher
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Teacher interface.
 */
export function instanceOfTeacher(value: object): value is Teacher {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('branch' in value) || value['branch'] === undefined) return false;
    if (!('idNumber' in value) || value['idNumber'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function TeacherFromJSON(json: any): Teacher {
    return TeacherFromJSONTyped(json, false);
}

export function TeacherFromJSONTyped(json: any, ignoreDiscriminator: boolean): Teacher {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'branch': json['branch'],
        'idNumber': json['idNumber'],
        'description': json['description'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function TeacherToJSON(value?: Teacher | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'branch': value['branch'],
        'idNumber': value['idNumber'],
        'description': value['description'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

