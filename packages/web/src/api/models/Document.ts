// @ts-nocheck

/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Export } from './Export';
import {
    ExportFromJSON,
    ExportFromJSONTyped,
    ExportToJSON,
} from './Export';
import type { Record } from './Record';
import {
    RecordFromJSON,
    RecordFromJSONTyped,
    RecordToJSON,
} from './Record';

/**
 * 
 * @export
 * @interface Document
 */
export interface Document {
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    time: string;
    /**
     * 
     * @type {Array<Record>}
     * @memberof Document
     */
    records: Array<Record>;
    /**
     * 
     * @type {Array<Export>}
     * @memberof Document
     */
    exports: Array<Export>;
    /**
     * 
     * @type {Date}
     * @memberof Document
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Document
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Document interface.
 */
export function instanceOfDocument(value: object): value is Document {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('time' in value) || value['time'] === undefined) return false;
    if (!('records' in value) || value['records'] === undefined) return false;
    if (!('exports' in value) || value['exports'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function DocumentFromJSON(json: any): Document {
    return DocumentFromJSONTyped(json, false);
}

export function DocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Document {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'time': json['time'],
        'records': ((json['records'] as Array<any>).map(RecordFromJSON)),
        'exports': ((json['exports'] as Array<any>).map(ExportFromJSON)),
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function DocumentToJSON(value?: Document | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'time': value['time'],
        'records': ((value['records'] as Array<any>).map(RecordToJSON)),
        'exports': ((value['exports'] as Array<any>).map(ExportToJSON)),
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

